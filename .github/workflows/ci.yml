name: CI

on:
  pull_request:
    branches: [develop, main]
  push:
    branches: [develop, main]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

        # The step bellow will try to cache the dependency
      - name: Cache node_modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Use NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: '18.x'
      - run: npm ci
      - run: npm run format:C
      - run: npm test -- --coverage
        env:
          CI: true

        # Upload a code test coverage to a folder in project
      - name: Upload Test Coverage
        uses: actions/upload-artifact@v1
        with:
          name: code-coverage
          path: coverage

      - name:
          Build Project
          # Check the event type with an IF condition, if we push we run this job!
        if: github.event_name == 'push'
        run: npm run build

        # Upload the build files to build folder in project
      - name: Upload Build Folder
        if: github.event_name == 'push'
        uses: actions/upload-artifact@v1
        with:
          name: build
          path: build

        # Create a release
      - name: Create a Release
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name:
          Deploy to Staging
          # We deploy the code to the staging env NOT the production!
        if:
          github.event_name == 'push'
          # We push the code to SURGE, and use the URL provided previously when set up local env
        run:
          npx surge --project ./build --domain ad-brick.surge.sh
          # We provide the env.var for SURGE, so we can authenticate, the token is generated in development by running "surge token" in terminal
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
